React Hooks рдХреНрдпрд╛ рд╣реЛрддреЗ рд╣реИрдВ?
тЬЕ Answer:

Hooks React 16.8 рдореЗрдВ рдЖрдП рдереЗред
рдпреЗ рдРрд╕реЗ functions рд╣реИрдВ рдЬреЛ function components рдореЗрдВ React рдХреЗ features (рдЬреИрд╕реЗ state рдФрд░ lifecycle methods) рдХреЛ use рдХрд░рдиреЗ рджреЗрддреЗ рд╣реИрдВред
рдкрд╣рд▓реЗ рдпреЗ рд╕рд┐рд░реНрдл class components рдореЗрдВ possible рдерд╛ред

ЁЯФз Commonly Used Hooks with Code
ЁЯЯб 1. useState() Hook тАУ state рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП
jsx
-----------------------------------------------------------------------------------
import React, { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0); // initial value = 0

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={() => setCount(count + 1)}>рдмрдврд╝рд╛рдУ</button>
    </div>
  );
}
-----------------------------------------------------------------------------------
ЁЯУМ useState рд╕реЗ рд╣рдо variable (рдЬреИрд╕реЗ count) рдХреЛ store рдФрд░ update рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред

ЁЯЯб 2. useEffect() Hook тАУ Side Effects рдХреЗ рд▓рд┐рдП
jsx
-----------------------------------------------------------------------------------
import React, { useState, useEffect } from 'react';

function Timer() {
  const [time, setTime] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setTime(time => time + 1);
    }, 1000);

    return () => clearInterval(interval); // cleanup
  }, []);

  return <p>Time: {time} seconds</p>;
}
-----------------------------------------------------------------------------------
ЁЯУМ useEffect рд╣рд░ рдмрд╛рд░ component render рд╣реЛрдиреЗ рдХреЗ рдмрд╛рдж рдЪрд▓рддрд╛ рд╣реИред рдЗрд╕рдореЗрдВ API call, timer, event listener рдЬреИрд╕реЗ рдХрд╛рдо рд╣реЛрддреЗ рд╣реИрдВред

ЁЯЯб 3. useRef() Hook тАУ DOM рдпрд╛ values рдХреЛ track рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП
jsx
-----------------------------------------------------------------------------------
import React, { useRef } from 'react';

function FocusInput() {
  const inputRef = useRef(null);

  const handleClick = () => {
    inputRef.current.focus(); // input рдХреЛ focus рдХрд░реЗрдЧрд╛
  };

  return (
    <>
      <input ref={inputRef} type="text" />
      <button onClick={handleClick}>Focus рдХрд░реЛ</button>
    </>
  );
}
-----------------------------------------------------------------------------------
ЁЯУМ useRef рд╕реЗ рд╣рдо DOM elements рдХреЛ directly access рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рдпрд╛ values рдХреЛ рдмрд┐рдирд╛ re-render track рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред

ЁЯЯб 4. useContext() Hook тАУ Props drilling рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП
jsx
-----------------------------------------------------------------------------------
import React, { useContext, createContext } from 'react';

const NameContext = createContext();

function Child() {
  const name = useContext(NameContext);
  return <h1>рдирдорд╕реНрддреЗ {name}</h1>;
}

function App() {
  return (
    <NameContext.Provider value="Amrit">
      <Child />
    </NameContext.Provider>
  );
}
-----------------------------------------------------------------------------------
ЁЯУМ useContext рд╕реЗ рд╣рдо directly context рдХреЗ value рдХреЛ access рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рдмрд┐рдирд╛ рдмрд╛рд░-рдмрд╛рд░ props рднреЗрдЬреЗред

ЁЯза Interview Q&A on Hooks
тЭУ Q: useState рдФрд░ useEffect рдореЗрдВ рдХреНрдпрд╛ рдлрд░реНрдХ рд╣реИ?
тЬЕ Answer:

useState рд╕реЗ рд╣рдо state рдмрдирд╛ рдФрд░ update рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рдЬрдмрдХрд┐ useEffect side effects (рдЬреИрд╕реЗ API call, timer) рдХреЛ handle рдХрд░рддрд╛ рд╣реИред

тЭУ Q: рдХреНрдпрд╛ рд╣рдо class components рдореЗрдВ Hooks use рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ?
тЬЕ Answer:

рдирд╣реАрдВ, Hooks рд╕рд┐рд░реНрдл functional components рдореЗрдВ рдХрд╛рдо рдХрд░рддреЗ рд╣реИрдВред

тЭУ Q: useRef рдХрд╛ real-life use рдХреНрдпрд╛ рд╣реИ?
тЬЕ Answer:

рдЬреИрд╕реЗ form рдореЗрдВ input рдкрд░ auto-focus рдХрд░рд╡рд╛рдирд╛, рдпрд╛ рдХрд┐рд╕реА previous value рдХреЛ track рдХрд░рдирд╛ред

тЭУ Q: useEffect рдХреЗ dependency array рдХрд╛ рдорддрд▓рдм?
тЬЕ Answer:

рдпреЗ рдмрддрд╛рддрд╛ рд╣реИ рдХрд┐ effect рдХрдм рдЪрд▓реЗред
рдЕрдЧрд░ empty [] рд╣реИ, рддреЛ рд╕рд┐рд░реНрдл рдПрдХ рдмрд╛рд░ рдЪрд▓реЗрдЧрд╛ (componentDidMount рдЬреИрд╕рд╛)ред
рдЕрдЧрд░ рдХреБрдЫ values рджреА рд╣реИрдВ, рддреЛ рдЬрдм рд╡реЛ values рдмрджрд▓реЗрдВ рддрдм рдЪрд▓реЗрдЧрд╛ред